#!/usr/bin/env python

from seisflows.tools.config import loadclass, loadvars, ConfigObj, \
    ParameterObj, get_dic_from_yaml

PAR = ParameterObj('SeisflowsParameters')
PATH = ParameterObj('SeisflowsPaths')
OBJ = ConfigObj('SeisflowsObjects')


if __name__ == '__main__':
    """ Loads and checks parameters and objects and submits SeisFlows workflow
    """

    # load parameters from working directory
    PAR.update(get_dic_from_yaml('parameters.yaml'))
    PATH.update(loadvars('paths', '.'))

    # check parameters
    if 'SYSTEM' not in PAR.General:
        raise Exception
    if 'PREPROCESS' not in PAR.General:
        PAR.General['PREPROCESS'] = 'default'
    if 'POSTPROCESS' not in PAR.General:
        PAR.General['POSTPROCESS'] = 'default'
    if 'SOLVER' not in PAR.General:
        raise Exception
    if 'OPTIMIZE' not in PAR.General:
        PAR.General['OPTIMIZE'] = 'default'
    if 'WORKFLOW' not in PAR.General:
        raise Exception

    register = OBJ.register

    # load objects
    system = loadclass('system', PAR.General["SYSTEM"])()
    register('system', system)

    preprocess = loadclass('preprocess', PAR.General["PREPROCESS"])()
    register('preprocess', preprocess)

    solver = loadclass('solver', PAR.General["SOLVER"])()
    register('solver', solver)

    postprocess = loadclass('postprocess', PAR.General["POSTPROCESS"])()
    register('postprocess', postprocess)

    optimize = loadclass('optimize', PAR.General["OPTIMIZE"])()
    register('optimize', optimize)

    workflow = loadclass('workflow', PAR.General["WORKFLOW"])()
    register('workflow', workflow)

    # check objects
    system.check()
    workflow.check()
    solver.check()
    optimize.check()
    preprocess.check()
    postprocess.check()

    # submit job
    system.submit(workflow)

